{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/Observer/array.js","../src/Observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\n * 工具\n */\n\n/**\n * 是否是函数判断\n * @param {*} val \n */\nexport function isFunction(val) {\n    return typeof val === 'function'\n}\n\n/**\n * 是否是对象判断\n * @param {*} val \n */\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null\n}","let oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype) // arrayMethods.__proto__ = Array.prototype 继承获取属性方法\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\n\nmethods.forEach(method => {\n    // 用户调用时，如果用以上的方法，则用重写的，否则用原生的\n    arrayMethods[method] = function (...args) {\n        console.log('数组变化了')\n        oldArrayPrototype[method].apply(this, args) // 执行原生的方法\n        // arr.push({a: 1},{a: 2},{a: 3}) push对象也需要处理，则方法中需要对新增对象进行劫持\n        let inserted // 新增的对象\n        let ob = this.__ob__ // 获取当前数组的Observer实例，为了后面使用observeArray方法\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2) // 只取splice中的新增对象\n                break\n        }\n        // 如果有新增对象，则需要对新增的对象进行劫持，需要观测数组每一项，而不是数组本身\n        if (inserted) ob.observeArray(inserted)\n    }\n})\n\n","import { isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n// 响应式就是给所有属性套层外壳\n\n/**\n * 监测数据\n * 使用class可以添加类型，方便检查\n */\nclass Observer {\n    constructor(data) {\n        Object.defineProperty(data, '__ob__', {\n            value: this,    // 所有被劫持的属性都具有__ob__属性，这个属性是一个Observer实例\n            enumerable: false, // 设置为false，不可枚举，注意循环引用的时候，不能被遍历到\n        })\n        if (Array.isArray(data)) {\n            // 数组劫持处理\n            // 对数组方法进行改写 切片编程 高阶函数\n            data.__proto__ = arrayMethods\n            // 如果数组中数据是对象, 那么也要进行监测\n            this.observeArray(data)\n        } else {\n            // 对象劫持处理\n            this.walk(data)\n        }\n    }\n    // 数组中数组和对象劫持\n    // 虽然数组没监听索引，但是其中的对象会进行处理，可以使用Object.freeze() 冻结对象\n    observeArray(data) {\n        data.forEach(item => {\n            observe(item)\n        })\n    }\n    // 对象劫持\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\n// vue2会对对象进行遍历，对每个属性重新定义，性能差\nfunction defineReactive(data, key, value) {\n    observe(value) // 对象套对象，则需要遍历（性能差）\n    Object.defineProperty(data, key, {\n        get() {\n            console.log('get:' + key)\n            return value\n        },\n        set(newVal) {\n            console.log('set:' + key)\n            observe(newVal);// 当用户设置新对象，则对这个对象进劫持\n            value = newVal\n        }\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return\n    }\n    // 如果已经被劫持过了，就不再劫持\n    if (data.__ob__) {\n        return\n    }\n    // 默认最外层的data必须是个对象\n    return new Observer(data)\n}","import { observe } from \"./Observer/index\"\nimport { isFunction } from \"./utils\"\n\n/**\n * 状态初始化\n * @param {*} vm \n */\nexport function initState(vm) {\n    const opts = vm.$options\n    // if (opts.props) {\n    //     initProps()\n    // }\n    if (opts.data) {\n        initData(vm)\n    }\n    // if (opts.computed) {\n    //     initComputed()\n    // }\n    // if (opts.watch) {\n    //     initWatch()\n    // }\n}\n\n/**\n * 数据代理\n * @param {*} vm \n * @param {*} source \n * @param {*} key \n */\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newVal) {\n            vm[source][key] = newVal\n        }\n    })\n}\n\n\n/**\n * data数据初始化\n * @param {*} vm \n */\nfunction initData(vm) { // vm.$el  vue内部会对属性进行检测，若是以$开头，则不进行代理\n    let data = vm.$options.data\n    // vue2会将data的所有数据进行劫持 Object.defineProperty\n    data = vm._data = isFunction(data) ? data.call(vm) : data // 此时，vm和data无关，添加_data处理\n\n    for (const key in data) {\n        proxy(vm, '_data', key)\n    }\n\n    observe(data)\n}","/**\n * Vue初始化\n * @param {*} Vue \n */\n\nimport { initState } from \"./state\"\n\n// Vue的基础上做一次混合操作\nexport function initMixin(Vue) {\n    // _业界规范，不希望被外部使用\n    Vue.prototype._init = function (options) {\n        const vm = this\n        vm.$options = options\n\n        // 数据初始化 watch computed props data\n        initState(vm) // vm.$options.data\n    }\n}","import { initMixin } from \"./init\"\n\n// 构造函数模拟class\nfunction Vue(options) {\n  // options 为用户传入的选项\n  this._init(options) // 初始化操作 作为原型方法，所有共用\n}\n\n// Vue原型扩展\ninitMixin(Vue)\n\nexport default Vue"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","args","apply","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newVal","initState","vm","opts","$options","initData","proxy","source","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}